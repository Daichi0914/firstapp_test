{"version":3,"sources":["Form.js","Item.js","List.js","App.js","index.js"],"names":["Form","addToDo","useState","value","setValue","id","onSubmit","e","preventDefault","undefined","alert","type","onChange","target","Item","content","deleteToDo","isDone","setIsDone","textDecoration","style","onClick","Ul","styled","ul","List","toDos","map","toDo","index","key","App","shortid","generate","setToDos","copyToDos","slice","deleteIndex","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"8NAkCeA,EAhCF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,KAiB5B,OACE,0BAAMC,GAAG,QAAQC,SAfE,SAAAC,GAEnB,GADAA,EAAEC,iBACY,KAAVL,QAA0BM,IAAVN,EAClB,OAAOO,MAAM,sEAEfT,EAAQE,GAKRC,EAAS,MAKT,QAEE,2BACEO,KAAK,OACLC,SAAU,SAAAL,GACRH,EAASG,EAAEM,OAAOV,QAEpBA,MAAOA,IAET,kD,QCHSW,EAxBF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYX,EAAS,EAATA,GAAS,EAChBH,oBAAS,GADO,mBACrCe,EADqC,KAC7BC,EAD6B,KAGtCC,EAAiB,CACrBA,eAAgBF,EAAS,eAAiB,QAO5C,OACE,4BACE,2BAAON,KAAK,WAAWC,SAAU,WAC/BM,GAAWD,MAEb,0BAAMG,MAAOD,GAAiBJ,GAC9B,4BAAQM,QAVS,WACnBL,EAAWX,KAST,kB,4FCdN,IAmBMiB,E,MAAKC,EAAOC,GAAV,KAIOC,EAvBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOV,EAAiB,EAAjBA,WACrB,OACE,kBAACM,EAAD,KAEII,EAAMC,KAAI,SAACC,EAAMC,GACf,OACE,kBAAC,EAAD,CACEd,QAASa,EAAKb,QACde,IAAKD,EACLb,WAAYA,EACZX,GAAIuB,EAAKvB,UC6CR0B,EAtDH,WAAO,IAAD,EACU7B,mBAAS,CACjC,CACEa,QAAS,iCACTV,GAAI2B,IAAQC,YAEd,CACElB,QAAS,iCACTV,GAAI2B,IAAQC,YAEd,CACElB,QAAS,iCACTV,GAAI2B,IAAQC,cAZA,mBACTP,EADS,KACFQ,EADE,KA4ChB,OACE,oCACE,wCACA,kBAAC,EAAD,CAAMjC,QA/BM,SAAAc,GACdmB,EAAS,GAAD,mBACHR,GADG,CAEN,CACEX,QAASA,EACTV,GAAI2B,IAAQC,kBA2Bd,kBAAC,EAAD,CAAMP,MAAOA,EAAOV,WAtBL,SAAAX,GAEjB,IAAM8B,EAAYT,EAAMU,QACxB1B,MAAML,EAAK,iBAGX,IAAMgC,EAAcF,EAAUG,WAAU,SAACV,GACvC,OAAOA,EAAKvB,KAAOA,KAGrB8B,EAAUI,OAAOF,EAAa,GAC9BH,EAASC,QCtCbK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.074869d7.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Form = ({ addToDo }) => {\n  const [value, setValue] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value === \"\" || value === undefined) {\n      return alert('文字を入力して下さい。')\n    }\n    addToDo(value)\n\n    // フォームを空にする\n\n    // state(今回はvalue)を空にする\n    setValue('')\n    // stateの変更がフォームに反映されるようにする\n  }\n\n  return (\n    <form id='clear' onSubmit={handleSubmit}>\n      ToDo:\n      <input\n        type='text'\n        onChange={e => {\n          setValue(e.target.value)\n        }}\n        value={value}\n      />\n      <button>送信</button>\n    </form>\n  )\n}\n\nexport default Form","import React, { useState } from 'react';\n\nconst Item = ({ content, deleteToDo, id }) => {\n  const [isDone, setIsDone] = useState(false);\n\n  const textDecoration = {\n    textDecoration: isDone ? 'line-through' : 'none'\n  }\n\n  const handleDelete = () => {\n    deleteToDo(id)\n  }\n\n  return (\n    <li>\n      <input type='checkbox' onChange={() => {\n        setIsDone(!isDone)\n      }}/>\n      <span style={textDecoration}>{content}</span>\n      <button onClick={handleDelete}>\n        削除\n      </button>\n    </li>\n  )\n}\n\nexport default Item","import React from 'react';\nimport Item from './Item'\n\nimport styled from 'styled-components'\n\nconst List = ({ toDos, deleteToDo }) => {\n  return (\n    <Ul>\n      {\n        toDos.map((toDo, index) => { // 第一引数で一つのオブジェクトを持ってくる\n          return (\n            <Item\n              content={toDo.content}\n              key={index}\n              deleteToDo={deleteToDo}\n              id={toDo.id}\n            />\n          )\n        })\n      }\n    </Ul>\n  )\n}\n\nconst Ul = styled.ul`\n  list-style: none;\n`\n\nexport default List","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form';\nimport List from './List';\n\n\nconst App = () => {\n  const [toDos, setToDos] = useState([\n    {\n      content: '課題をする',\n      id: shortid.generate()\n    },\n    {\n      content: '洗濯をする',\n      id: shortid.generate()\n    },\n    {\n      content: '電話をする',\n      id: shortid.generate()\n    }\n  ])\n\n  const addToDo = content => {\n    setToDos([\n      ...toDos,\n      {\n        content: content,\n        id: shortid.generate()\n      }\n    ])\n  }\n\n  const deleteToDo = id => {\n    // const copyToDos = toDos.slice(0, toDos.length); // 0から最後まで\n    const copyToDos = toDos.slice(); // 配列全部をコピーするときは引数省略可\n    alert(id + ' is deleted!!');\n\n    // toDos(配列)からidプロパティが合致する要素(オブジェクト)を検索\n    const deleteIndex = copyToDos.findIndex((toDo) => {\n      return toDo.id === id // Boolean値が返る\n    })\n\n    copyToDos.splice(deleteIndex, 1)\n    setToDos(copyToDos)\n    /*\n    setToDos(copyToDos.splice(deleteIndex, 1))\n    ↑切り取ったやつを表示してしまう\n    */\n  }\n\n  return (\n    <>\n      <h1>ToDo App</h1>\n      <Form addToDo={addToDo} />\n      <List toDos={toDos} deleteToDo={deleteToDo} />\n    </>\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}